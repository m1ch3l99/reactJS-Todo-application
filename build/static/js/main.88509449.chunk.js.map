{"version":3,"sources":["components/Header.js","Hooks/useFetchQuote.js","components/Quote.js","Context/StateProvider.js","Hooks/useTodoActions.js","components/Todo.js","Hooks/UseLocalStorage.js","components/Home.js","App.js","Context/reducer.js","index.js"],"names":["Header","date","Date","toLocaleDateString","className","src","alt","useFetchQuote","useState","quote","setQuote","isLoading","setIsLoading","useEffect","a","fetch","then","response","json","data","Math","floor","random","length","fetchQuote","Quote","text","author","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStatValue","useContext","useTodoActions","dispatch","completeTodo","id","type","payload","deleteTodo","updateTodo","Todo","todo","isCompleted","createdAt","isOpen","setIsOpen","updateInput","setIsUpdateInput","convertToInput","onChange","e","target","onClick","CheckCircle","Edit","Delete","alert","useLocalStorage","input","setInput","useStateValue","todos","isEmpty","setIsEmpty","temporaryDisplay","setTemporaryDisplay","hideWarning","setTimeout","localStorage","setItem","JSON","stringify","addTodo","preventDefault","completed","time","toUTCString","v4","Home","onSubmit","placeholder","map","App","parse","getItem","state","action","filter","updatedTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88509449.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Header.css';\r\n\r\nfunction Header() {\r\n    const date = new Date().toLocaleDateString();\r\n\r\n    // console.log(day)\r\n    return (\r\n        <div className=\"header\">\r\n            \r\n            <div className=\"header__logo\">\r\n                <img \r\n                    src=\"https://www.any.do/images/logo.png\"\r\n                    alt=\"logo\"\r\n                    className=\"header__logo--image\"\r\n                />\r\n                <h1 className=\"header__logo--title\">\r\n                    Welcome to Todo List\r\n                </h1>\r\n            </div>\r\n\r\n            <div className=\"header__date\">\r\n                <h2>Today's Date: { date }</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction useFetchQuote() {\r\n    const [quote, setQuote] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const fetchQuote = async() =>{\r\n            setIsLoading(true);\r\n            await fetch(\"https://type.fit/api/quotes\")\r\n            .then(response=> response.json())\r\n            .then(data=>{\r\n                setQuote(\r\n                    data[Math.floor(Math.random()*data.length)]\r\n                )\r\n                setIsLoading(false);\r\n            })\r\n        }\r\n        fetchQuote();\r\n    },[]);\r\n\r\n    return { isLoading, quote }\r\n}\r\n\r\nexport default useFetchQuote\r\n","import React from 'react';\r\nimport useFetchQuote from '../Hooks/useFetchQuote';\r\nimport '../styles/Quote.css';\r\n\r\nfunction Quote() {\r\n\r\n    const {isLoading, quote} = useFetchQuote();\r\n\r\n    return (\r\n        <div className=\"quote\">\r\n\r\n            {\r\n                isLoading ?\r\n                    <h2 className=\"quote__desc\">\r\n                        Fetching The Quote of The Day...\r\n                    </h2>\r\n                    :\r\n                    <div>\r\n                        <h2 className=\"quote__desc\">\r\n                             {quote.text} \r\n                        </h2>\r\n                        <h4 className=\"quote__author\">\r\n                            {\r\n                                quote.author !== \" \" ?\r\n                                `\" ${quote.author} \"`\r\n                                :\r\n                                \"\"\r\n                            }\r\n                        </h4>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\n//preparing the context\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) =>(\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        { children }\r\n    </StateContext.Provider>\r\n); \r\n\r\nconst useStatValue = () => useContext(StateContext);\r\n\r\nexport default useStatValue;","import useStatValue from \"../Context/StateProvider\";\r\n\r\nfunction useTodoActions( ) {\r\n\r\n    const [,dispatch] = useStatValue();\r\n\r\n    const deleteTodo = (id) =>{\r\n        dispatch({\r\n            type:\"DELETE_TODO\",\r\n            id:id,\r\n        });\r\n    } \r\n\r\n    const completeTodo = (id) =>{\r\n       dispatch({\r\n           type:\"COMPLETE_TODO\",\r\n           payload:id,\r\n       });\r\n    }\r\n\r\n    //update\r\n    const updateTodo = (id,text) =>{\r\n        dispatch({\r\n            type:\"UPDATE_TODO\",\r\n            payload:{\r\n                id:id,\r\n                text:text,\r\n            }\r\n        })\r\n    }\r\n\r\n    return { \r\n        completeTodo, \r\n        deleteTodo,\r\n        updateTodo,\r\n     }\r\n}\r\n\r\nexport default useTodoActions;\r\n","import React, { useState } from 'react';\r\nimport '../styles/Todo.css';\r\nimport { CheckCircle, Delete, Edit } from '@material-ui/icons';\r\nimport useTodoActions from '../Hooks/useTodoActions';\r\n\r\nfunction Todo({ todo, isCompleted, createdAt, id}) {\r\n\r\n    const { completeTodo,deleteTodo, updateTodo} = useTodoActions();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [updateInput, setIsUpdateInput] = useState(\"\");\r\n\r\n    const convertToInput = () =>{\r\n        if(isOpen){\r\n            setIsOpen(false);\r\n        }else{\r\n            setIsOpen(true)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <div className=\"todo\">\r\n           \r\n            {\r\n                isOpen ? \r\n\r\n                <>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"todo__edit--input\" \r\n                    value={updateInput} \r\n                    onChange={(e)=> setIsUpdateInput(e.target.value)}\r\n                />\r\n\r\n                <button \r\n                    className=\"todo__edit--cancelBtn\"\r\n                    onClick={convertToInput}\r\n                >\r\n                    Cancel\r\n                </button>\r\n\r\n                <button\r\n                    className=\"todo__edit--saveBtn\" \r\n                    onClick={()=>{\r\n                        convertToInput()\r\n                        updateTodo(id, updateInput)\r\n                    }}\r\n                >\r\n                    Save\r\n                </button>\r\n                </>\r\n\r\n                :\r\n\r\n                <>\r\n                <div className=\"todo__info\">\r\n                    <h3 className={\r\n                        isCompleted ? \"todo__desc--completed\" : \"todo__desc\"\r\n                        }>\r\n                        {todo}\r\n                    </h3>\r\n                    <p className=\"todo__time\">{createdAt}</p>\r\n                </div>\r\n\r\n                <div className=\"todo__actions\">    \r\n                    <CheckCircle \r\n                        className=\"todo__actions--complete\"\r\n                        onClick={()=>{\r\n                            completeTodo(id)\r\n                        }}\r\n                    />\r\n            \r\n                    <Edit className=\"todo__actions--edit\" onClick={convertToInput} />\r\n\r\n                    <Delete \r\n                        className=\"todo__actions--delete\" \r\n                        onClick={()=> !isCompleted ? \r\n                            alert(`Why being so lazy 🤔? Complete the todo before deleting it.`)\r\n                            :\r\n                            deleteTodo(id)\r\n                        }\r\n                    />\r\n                </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import { useEffect, useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport useStateValue from '../Context/StateProvider';\r\n\r\nconst useLocalStorage = () =>{\r\n    \r\n    const [input, setInput] = useState(\"\");\r\n    const [{todos}, dispatch] = useStateValue();\r\n    const [isEmpty,setIsEmpty] = useState(false);\r\n    const [temporaryDisplay, setTemporaryDisplay] = useState(false);\r\n\r\n    const addTodo = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(!input){\r\n            setIsEmpty(true);\r\n            setTemporaryDisplay(true);\r\n            hideWarning();\r\n        } else {\r\n            dispatch({\r\n                type:\"ADD_TODO\",\r\n                todo:{\r\n                    text: input,\r\n                    completed: false,\r\n                    time: new Date().toUTCString(),\r\n                    id: v4(),\r\n                }\r\n            });\r\n            setTemporaryDisplay(false);\r\n            setIsEmpty(false);\r\n        }\r\n        setInput(\"\");\r\n    }\r\n\r\n    const hideWarning = () =>{\r\n        if(isEmpty){\r\n            setTimeout(()=>{\r\n                setTemporaryDisplay(false);\r\n            },3500);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"todos\",JSON.stringify(todos))\r\n    },[todos]);\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            if(isEmpty){\r\n                setTemporaryDisplay(false);\r\n            }\r\n        },3500)\r\n    },[isEmpty])\r\n\r\n    \r\n\r\n    return {\r\n        addTodo, \r\n        input, \r\n        todos, \r\n        setInput,\r\n        isEmpty,\r\n        temporaryDisplay\r\n    };\r\n}\r\n\r\nexport default useLocalStorage;","import React from 'react';\r\nimport '../styles/Home.css';\r\nimport Quote from './Quote';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Todo from './Todo';\r\nimport useLocalStorage from '../Hooks/UseLocalStorage';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Home() {\r\n\r\n    const { addTodo, input, todos, setInput, temporaryDisplay} = useLocalStorage();\r\n\r\n    return (\r\n        <div className=\"home\">\r\n           <Quote />\r\n\r\n           <div className=\"home__addTodo\">\r\n                <form className=\"home__addTodoForm\" onSubmit={addTodo}>\r\n                    <input \r\n                        className=\"home__addTodoForm--input\"\r\n                        value={input}\r\n                        onChange={(e)=>setInput(e.target.value)}\r\n                        placeholder=\"Enter a Todo...\"\r\n                    />\r\n                    <button  \r\n                        className=\"home__addTodoForm--button\"\r\n                    >\r\n                       <AddCircleIcon /> <span>Add Todo</span>  \r\n                    </button>\r\n                    <h3 className=\"home__addTodoForm--warning\">\r\n                        {\r\n                            temporaryDisplay ? \r\n                            \"Please enter a todo\" \r\n                            : \r\n                            \"\"\r\n                        }\r\n                    </h3>\r\n                </form>\r\n                \r\n                <div className=\"home__addTodo--todos\">\r\n                    {\r\n                        todos.length === 0 && \r\n                        <div className=\"home__addTodo--recommendationDiv\">\r\n                            <h1 className=\"home__addTodo--recommendation\">\r\n                                Add some todos to be productive\r\n                            </h1>\r\n                            <AddCircleIcon className=\"addIcon\" />\r\n                        </div>\r\n                    }\r\n\r\n                    <FlipMove>\r\n                    {\r\n                        todos?.map(todo =>(\r\n                                <li key={todo.id}>\r\n                                    {\r\n                                        <Todo\r\n                                            id={todo.id} \r\n                                            todo={todo.text}\r\n                                            isCompleted={todo.completed}\r\n                                            createdAt={todo.time}\r\n                                        />\r\n                                    }\r\n                                </li>\r\n                        ))\r\n                    }\r\n                    </FlipMove>\r\n                </div>\r\n                \r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport './styles/App.css';\n\nfunction App() { \n  return (\n    <div className=\"app\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n    todos: JSON.parse(localStorage.getItem(\"todos\")) || [],\r\n}\r\n\r\n// the reducer is responsible of the actions\r\nconst reducer = (state, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_TODO\":\r\n            return{\r\n                ...state,\r\n                todos: [...state.todos, action.todo],\r\n            };\r\n        \r\n        case \"DELETE_TODO\":\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => todo.id !== action.id),\r\n            }\r\n            \r\n        case \"COMPLETE_TODO\":\r\n            const completeTodo = [...state.todos];\r\n            for(const todo of completeTodo){\r\n                if(todo.id === action.payload){\r\n                    todo.completed = true;\r\n                }\r\n            }\r\n            state.todos = [...completeTodo];\r\n            return{\r\n                ...state,\r\n            };\r\n\r\n        case \"UPDATE_TODO\":\r\n            const updatedTodos = [...state.todos];\r\n\r\n            for(const todo of updatedTodos){\r\n                if(todo.id === action.payload.id){\r\n                    todo.text = action.payload.text;\r\n                }\r\n            }\r\n            state.todos = [...updatedTodos];\r\n            return{\r\n                ...state,\r\n            }\r\n\r\n        // =================TODOS ACTIONS================\r\n\r\n        default:\r\n            return state;\r\n    };\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StateProvider } from './Context/StateProvider'; \nimport reducer, { initialState } from './Context/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}